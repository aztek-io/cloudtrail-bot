image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'

variables:
  CLOUDTRAIL_BOT_ARCHIVE: Resources/Scripts/CloudTrailBot/cloudtrail_bot.zip
  CLOUDTRAIL_BOT_SCRIPT: Resources/Scripts/CloudTrailBot/cloudtrail_bot.py
  ARCHIVE_BUCKET: archives.aztek.io
  TERRAFORM_DIR: "./Terraform"
  REMOTE_STATE_BUCKET: "aztek.terraform.tfstate"
  REMOTE_STATE_BUCKET_REGION: "us-west-2"
  PROJECT: "aztek"
  ENVIRONMENT: "dev"
  PROJECT_MINOR: "cloudtrail-bot"

before_script:
  - set -e
  - |
        if command -v terraform; then
            terraform --version
            terraform init \
                --backend-config="bucket=$REMOTE_STATE_BUCKET" \
                --backend-config="region=$REMOTE_STATE_BUCKET_REGION" \
                --backend-config="key=${PROJECT}/${ENVIRONMENT}/${PROJECT_MINOR}/terraform.tfstate" \
                "$TERRAFORM_DIR"
        elif command -v docker; then
            docker --version;
        fi

stages:
  - test_syntax
  - build_artifacts
  - push_artifacts
  - terraform_plan
  - terraform_apply
  - terraform_destroy

########################################
### Build Artifacts ####################
########################################

buildCloudTrailBotArtifacts:
  stage: build_artifacts
  script:
    - echo "$DOCKER_HOST"
    - echo "$DOCKER_DRIVER"
    - docker build -t 'cloudtrail_bot:latest' Resources/Scripts/CloudTrailBot/
    - docker run -d --name cloudtrail_bot_build cloudtrail_bot:latest
    - docker cp cloudtrail_bot_build:/tmp/Build.zip "$CLOUDTRAIL_BOT_ARCHIVE"
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  artifacts:
    paths:
    - "$CLOUDTRAIL_BOT_ARCHIVE"
    expire_in: 5 minutes
  only:
    changes:
      - .gitlab-ci.yml
      - Resources/Scripts/CloudTrailBot/*

########################################
### Push Artifacts #####################
########################################

pushCloudTrailBotArtifacts:
  stage: push_artifacts
  script:
    - aws s3 cp "$CLOUDTRAIL_BOT_ARCHIVE" "s3://${ARCHIVE_BUCKET}"
  image:
    name: aztek/awscli
    entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  only:
    changes:
      - .gitlab-ci.yml
      - Resources/Scripts/CloudTrailBot/*

TerraformValidate:
  stage: test_syntax
  script:
    - terraform validate "$TERRAFORM_DIR"
  only:
    changes:
      - .gitlab-ci.yml
      - Terraform/*.tf

TerraformPlan:
  stage: terraform_plan
  script:
    - |
        terraform plan \
            -var "project=$PROJECT" \
            -var "environment=$ENVIRONMENT" \
            -var "webhook=$SLACK_WEBHOOK" \
            -var "channel=$SLACK_CHANNEL" \
            -out="${PROJECT}-${ENVIRONMENT}.tf_plan" \
            "$TERRAFORM_DIR"
  artifacts:
    name: "${PROJECT}-${ENVIRONMENT}"
    paths:
      - "*.tf_plan"
  only:
    changes:
      - .gitlab-ci.yml
      - Terraform/*.tf

TerraformApply:
  stage: terraform_apply
  script:
    - terraform apply --auto-approve "${PROJECT}-${ENVIRONMENT}.tf_plan"
  dependencies:
    - TerraformPlan
  only:
    changes:
      - .gitlab-ci.yml
      - Terraform/*.tf

TerraformDestroy:
  stage: terraform_destroy
  script:
    - |
        terraform destroy \
            -var "project=$PROJECT" \
            -var "environment=$ENVIRONMENT" \
            -var "webhook=$SLACK_WEBHOOK" \
            -var "channel=$SLACK_CHANNEL" \
            -var "environment=$ENVIRONMENT" \
            --auto-approve \
            "$TERRAFORM_DIR"
  dependencies:
    - TerraformApply
  when: manual
