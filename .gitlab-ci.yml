########################################
### Image ##############################
########################################

image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

variables:
  CLOUDTRAIL_BOT_ARCHIVE: Resources/Scripts/CloudTrailBot/cloudtrail_bot.zip
  CLOUDTRAIL_BOT_SCRIPT: Resources/Scripts/CloudTrailBot/cloudtrail_bot.py
  ARCHIVE_BUCKET: archives.aztek.io

########################################
### Prerequisites ######################
########################################

before_script:
  - |
        if command -v terraform; then
            terraform --version
            terraform init ./Terraform
        elif command -v aws; then
            aws --version;
        elif command -v docker; then
            docker --version;
        fi

stages:
  - build_artifacts
  - push_artifacts
  - plan
  - deploy

########################################
### Build Artifacts ####################
########################################

buildCloudTrailBotArtifacts:
  stage: build_artifacts
  script:
    - |
        echo "$DOCKER_HOST"
        echo "$DOCKER_DRIVER
        docker build -t 'cloudtrail_bot:latest' Resources/Scripts/CloudTrailBot/ 1> /dev/null
        docker run -d --name cloudtrail_bot_build cloudtrail_bot:latest
        docker cp cloudtrail_bot_build:/Build.zip "$CLOUDTRAIL_BOT_ARCHIVE"
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  artifacts:
    paths:
    - "$CLOUDTRAIL_BOT_ARCHIVE"
    expire_in: 5 minutes
  only:
    changes:
      - Resources/Scripts/CloudTrailBot/*

########################################
### Build Artifacts ####################
########################################

pushCloudTrailBotArtifacts:
  stage: push_artifacts
  script:
    - |
        aws s3 cp "$CLOUDTRAIL_BOT_ARCHIVE" "s3://${ARCHIVE_BUCKET}"
  image: aztek/awscli
  only:
    changes:
      - Resources/Scripts/CloudTrailBot/*

########################################
### Plan ###############################
########################################

plan:
  stage: plan
  script:
    - terraform plan ./Terraform
  only:
    changes:
        - Terraform/*.tf

########################################
### Apply ##############################
########################################

apply:
  stage: deploy
  script:
    - terraform apply -auto-approve ./Terraform
  dependencies:
    - plan
  only:
    changes:
        - Terraform/*.tf

